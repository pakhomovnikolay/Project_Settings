<Window x:Class="Project_Settings.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:Project_Settings"
        xmlns:vm="clr-namespace:Project_Settings.ViewModels"
        xmlns:m="clr-namespace:Project_Settings.Models"
        mc:Ignorable="d"
        Title="{Binding Path=MyTitle, TargetNullValue='Конфигуратор проекта'}"
        Background="{DynamicResource ResultBackground}"
        Foreground="{DynamicResource ResultForeground}"
        Height="auto" Width="auto" MinHeight="400" MinWidth="800"
        WindowState="Maximized" WindowStartupLocation="CenterScreen"
        Closing="Window_Closing">

    <!-- ================================================================= Ресурсы ================================================================= -->
    <Window.Resources>
        <m:OpenSaveDialog x:Key="OpenSaveFileDialog"
                          TitleOpen="Открыть файл"
                          TitleSave="Сохранить файл"
                          SelectedFile="{Binding Path=MyPath, Mode=OneWayToSource}"
                          TitleWindowsProject="{Binding Path=MyTitle, Mode=OneWayToSource}"
                          MyDataProject="{Binding Path=MyDataProject, Mode=OneWayToSource}"
                          MyMapSheets="{Binding Path=MyMapSheets, Mode=OneWayToSource}"
                          SelectedSheets="{Binding Path=SelectedSheets, Mode=OneWayToSource}"
                          flBlackTheames="{Binding Path=flBlackTheames, Mode=OneWayToSource}"
                          flWhiteTheames="{Binding Path=flWhiteTheames, Mode=OneWayToSource}"/>

        <m:SetColor x:Key="MySetColor"
                    SelectedColor="{Binding Path=MySelectedColor, Mode=OneWayToSource}"/>
    </Window.Resources>

    <!-- ============================================================= Источники данных ============================================================ -->
    <Window.DataContext>
        <vm:MainWindowsViewModel/>
    </Window.DataContext>

    <!-- ======================================================== Настройки входныхх данных ======================================================== -->
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Q" Command="{Binding Path=CmdCloseApp}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdSaveFileDialog}"  CommandParameter="{Binding Path=MyPath}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdSaveFileDialog}" />
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdOpenFileDialog}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdCreateNewProject}"/>
    </Window.InputBindings>

    <!-- ======================================================== Основная визуальная часть ======================================================== -->
    <DockPanel>
        <!-- ================================================================= Меню ================================================================ -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Файл">
                <MenuItem Header="Создать" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdCreateNewProject}"/>
                <Separator/>
                <MenuItem Header="Открыть" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdOpenFileDialog}"/>
                <MenuItem Header="Сохранить" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdSaveFileDialog}" CommandParameter="{Binding Path=MyPath}"/>
                <MenuItem Header="Сохранить как" Command="{Binding Source={StaticResource OpenSaveFileDialog}, Path=CmdSaveFileDialog}"/>
                <Separator/>
                <MenuItem Header="Настройки" IsEnabled="False"/>
            </MenuItem>
            
            <MenuItem Header="Надстройки" IsEnabled="False">
            </MenuItem>

            <MenuItem Header="Формат" IsEnabled="False">
                
            </MenuItem>

            <CheckBox x:Name="CBoxBlackTheames"
                  Content="Установить темную тему"
                  Width="160" Height="15" IsEnabled="{Binding flWhiteTheames}"
                  IsThreeState="False"
                  Foreground="{Binding Path=ResultMenuItemForeground}"
                  IsChecked="{Binding flBlackTheames}"
                  Command="{Binding CmdSetBlackTheames}"/>

            <CheckBox x:Name="CBoxWhiteTheames"
                  Content="Установить светлую тему"
                  Width="160" Height="15" IsEnabled="{Binding flBlackTheames}"
                  IsThreeState="False"
                  Foreground="{Binding Path=ResultMenuItemForeground}"
                  IsChecked="{Binding flWhiteTheames}"
                  Command="{Binding CmdSetWhiteTheames}"/>
        </Menu>

        <!-- ===================================================== Верхняя Панель инструментов ===================================================== -->
        <Grid DockPanel.Dock="Top" Height="25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <WrapPanel Grid.Column="1" Margin="0,3,0,0">
                <Button Name="btnMyColor" Width="20" Background="{Binding Path=MySelectedColor}" Command="{Binding Path=CmdSetColorRow}" CommandParameter="{Binding ElementName=MyDataGrid}"/>
                <ComboBox Width="17" Margin="-1,0,0,0">
                    <ComboBoxItem >
                        <ComboBoxItem.Style>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Border Margin="{TemplateBinding Margin}"
                                                     Background="{TemplateBinding Background}" 
                                                     BorderBrush="{TemplateBinding BorderBrush}" 
                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                     Padding="{TemplateBinding Padding}">
                                                
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBoxItem.Style>
                        <ListBox ItemsSource="{Binding Path=MyListViewColor.ItemsSource}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 Height="190" Width="223"
                                 BorderThickness="0"
                                 Background="Transparent">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Fill="{Binding Name}" Width="15" Height="15" Margin="-4,-1,-4,-1" StrokeThickness="1" Stroke="Black">
                                        <Rectangle.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding Source={StaticResource MySetColor}, Path=CmdSelectColor}" CommandParameter="{Binding Name}"/>
                                        </Rectangle.InputBindings>
                                    </Rectangle>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ComboBoxItem>
                </ComboBox>
            </WrapPanel>
        </Grid>

        <!-- ====================================================== Нижняя Панель инструментов ===================================================== -->
        <ToolBarPanel DockPanel.Dock="Bottom" Height="30">
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Text="{Binding MyVersion}" Margin="5,0,0,0"/>
            </DockPanel>
        </ToolBarPanel>

        <!-- ====================================================== Списки листов и их данные ====================================================== -->
        <DockPanel DockPanel.Dock="Left">

            <!-- ============================================================== Сетки ============================================================== -->
            <Grid DockPanel.Dock="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="102" Width="250" MaxWidth="500"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!-- ======================================================== Группа листов ======================================================== -->
                <GroupBox Grid.Column="0" DockPanel.Dock="Left" Header="Список листов" BorderBrush="{DynamicResource ResultBorderBrush}">
                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom" Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Button Width="25" Height="25" Margin="0,5,0,0" Content="+" Command="{Binding Path=CmdCreateNewList}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="50"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Button Width="25" Height="25" Grid.Column="1" Margin="0,5,5,0" Content="-" Command="{Binding Path=CmdRemoveSelectedList}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="50"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </Grid>
                        <ListBox ItemsSource="{Binding AsyncState=true, IsAsync=True, Path=MyMapSheets}"
                                 SelectedItem="{Binding AsyncState=true, IsAsync=True, Path=SelectedSheets}"
                                 SelectedIndex="{Binding Path=MyDataProject.SheetLastSelectedIntex}"
                                 Style="{DynamicResource MyListBox}"
                                 ItemContainerStyle="{DynamicResource MyListBoxItem}"
                                 
                                 >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </GroupBox>
                <GridSplitter Width="2" Background="Transparent"/>

                <!-- ================================================== Группа отображения данных ================================================== -->
                <GroupBox Grid.Column="1" BorderBrush="{DynamicResource ResultBorderBrush}">
                    <GroupBox.Header>
                        <TextBlock Text="{Binding Path=SelectedSheets.Name, StringFormat=Выбраный лист - {0}, FallbackValue='Данные листа', TargetNullValue='Группа не выбрана'}"/>
                    </GroupBox.Header>
                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom" Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <Button Width="115" Height="25" Margin="-5,5,0,0"  Content="Добавить строку" Command="{Binding Path=CmdAddRowList}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="3"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Button Width="115" Height="25" Grid.Column="1" Margin="0,5,5,0" Content="Удалить строку" Command="{Binding Path=CmdRemoveSelectedRowList}" CommandParameter="{Binding ElementName=MyDataGrid}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="3"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </Grid>
                        <!--<Frame Content="{Binding Path=SelectedSheets.MyPage}" NavigationUIVisibility="Hidden"/>-->
                        <DataGrid x:Name="MyDataGrid"
                                  ItemsSource="{Binding AsyncState=true, IsAsync=True, Path=SelectedSheets.DataTables}"
                                  SelectionUnit="CellOrRowHeader"
                                  SelectedItem="{Binding Path=SelectedItems, UpdateSourceTrigger=PropertyChanged}"
                                  CanUserSortColumns="False"
                                  GridLinesVisibility="None"
                                  LoadingRow="MyDataGrid_LoadingRow" 
                                  CanUserAddRows="False"
                                  CanUserReorderColumns="False"
                                  EnableRowVirtualization="True"
                                  EnableColumnVirtualization="True"
                                  AutoGenerateColumns="True"
                                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                  VirtualizingPanel.IsContainerVirtualizable="True"
                                  VirtualizingPanel.ScrollUnit="Pixel"
                                  VirtualizingPanel.VirtualizationMode="Recycling"
                                  VirtualizingPanel.IsVirtualizing="True"                                  
                                  ScrollViewer.CanContentScroll="True">
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="MinWidth" Value="75"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Gray"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                        </DataGrid>
                    </DockPanel>
                </GroupBox>
            </Grid>
        </DockPanel>
    </DockPanel>
</Window>
